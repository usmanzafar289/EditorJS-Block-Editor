{"version":3,"sources":["js/index.js"],"names":["editor","EditorJS","readOnly","holder","inlineToolbar","image","SimpleImage","templatedparagraph","class","TemplatedParagraph","config","attaches","AttachesTool","endpoint","blocks","type","data","text","saveButton","click","api","block","console","log","document","getElementById","blockButton","imageButton","paraButton","fileButton","toggleReadOnlyButton","readOnlyIndicator","addEventListener","save","then","savedData","blockdata","JSON","stringify","innerHTML","catch","error","templatedata","templateHTMLData","index","getBlocksCount","insert","tp","attach","target","caption","url","fileupload","filePath","onchange","fileName","value","split","length","addBlock","toggle","readOnlyState","textContent","hasClass","ele","cls","className","match","RegExp"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["/**\r\n * To initialize the Editor, create a new instance with configuration object\r\n * @see docs/installation.md for mode details\r\n */\r\nvar editor = new EditorJS({\r\n  readOnly: false,\r\n\r\n  holder: \"editorjs\",\r\n\r\n  /**\r\n   * Common Inline Toolbar settings\r\n   * - if true (or not specified), the order from 'tool' property will be used\r\n   * - if an array of tool names, this order will be used\r\n   */\r\n  inlineToolbar: [\"link\", \"marker\", \"bold\", \"italic\"],\r\n  inlineToolbar: true,\r\n\r\n  tools: {\r\n    /**\r\n     * Each Tool is a Plugin. Pass them via 'class' option with necessary settings {@link docs/tools.md}\r\n\r\n    image: {\r\n        class: ImageTool,\r\n        config: {\r\n            endpoints: {\r\n                byFile: 'http://localhost:8008/uploadFile', // Your backend file uploader endpoint\r\n                byUrl: 'http://localhost:8008/fetchUrl', // Your endpoint that provides uploading by Url\r\n            }\r\n        }\r\n    },   */\r\n\r\n    image: SimpleImage,\r\n\r\n    templatedparagraph: {\r\n      class: TemplatedParagraph,\r\n      config: {},\r\n    },\r\n\r\n    attaches: {\r\n      class: AttachesTool,\r\n      config: {\r\n        endpoint: \"http://localhost:8008/uploadFile\",\r\n      },\r\n    },\r\n  },\r\n\r\n  /**\r\n   * This Tool will be used as default\r\n   */\r\n  // defaultBlock: 'paragraph',\r\n\r\n  /**\r\n   * Initial Editor data\r\n   */\r\n  data: {\r\n    blocks: [\r\n      {\r\n        type: \"paragraph\",\r\n        data: {\r\n          text: \"Hey. Meet the new Editor. On this page you can see it in action â€” try to edit this text. Source code of the page contains the example of connection and configuration.\",\r\n        },\r\n      },\r\n      {\r\n        type: \"paragraph\",\r\n        data: {\r\n          text: \"Another Paragraph\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  onReady: function () {\r\n    saveButton.click();\r\n  },\r\n  onChange: function (api, block) {\r\n    console.log(\"something changed\", block);\r\n  },\r\n});\r\n\r\n/**\r\n * Saving button\r\n */\r\nconst saveButton = document.getElementById(\"saveButton\");\r\nconst blockButton = document.getElementById(\"blockButton\");\r\nconst imageButton = document.getElementById(\"imageButton\");\r\nconst paraButton = document.getElementById(\"paraButton\");\r\nconst fileButton = document.getElementById(\"fileButton\");\r\n\r\n/**\r\n * Toggle read-only button\r\n */\r\nconst toggleReadOnlyButton = document.getElementById(\"toggleReadOnlyButton\");\r\nconst readOnlyIndicator = document.getElementById(\"readonly-state\");\r\n\r\n/**\r\n * Saving example\r\n */\r\nsaveButton.addEventListener(\"click\", function () {\r\n  editor\r\n    .save()\r\n    .then((savedData) => {\r\n      //   cPreview.show(savedData, document.getElementById(\"output\"));\r\n      console.log(savedData);\r\n      blockdata = JSON.stringify(savedData, null, 4);\r\n      document.getElementById(\"jsonData\").innerHTML = blockdata;\r\n      // Native(\"saveCallback\", savedData);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Saving error\", error);\r\n    });\r\n});\r\nconst templatedata = { text: \" some text\" };\r\n\r\n/*templatedata.text = `\r\n                <div class=\"ce-example-border\">\r\n                    <free-text>this is a large block of editable text. this is a large block of editable text. this is a large block of editable text. this is a large block of editable text. this is a large block of editable text. this is a large block of editable text. this is a large block of editable text. this is a large block of editable text. this is a large block of editable text. t\r\nhis is a large block of editable text. this is a large block of editable text. this is a large block of editable text.\r\nthis is a large block of editable text. </free-text>\r\n                    <m-select id=\"aaa\" choices='aaa|bbb|ccc' multiple >multiple choice field </m-select>\r\n                    fixed text\r\n                    <m-select id=\"bbb\" onclick='msel_clicked(this)' choices='aaa|bbb|ccc'>choice field </m-select>\r\n                    <m-select id=\"ccc\" onclick='msel_clicked(this)' choices='aaa|bbb|ccc'>choice field</m-select>\r\n                    postfix\r\n                    <p><deletable-span id=d1>\r\n                        this is a deletable paragraph with some editable text and some fixed text and a deletable word inside the deletable paragraph\r\n                          <free-text  placeholder='type something here placeholder'></free-text>\r\n                        more   deleteable fixed text\r\n                            <deletable-span id=d2>A deleteable word</deletable-span>\r\n                   some extra words here</deletable-span></p>\r\n                   </br><m-datenow id=\"ddd\">Date field</m-datenow></br>\r\n                   </br><m-date id=\"ddd\">Date field</m-date>\r\n                   <m-time id=\"time\">\r\n                   <input type=\"text\"  id=\"timepicker\" value=\"\" />\r\n                    </m-time>\r\n                           \r\n        <dom-bind>\r\n          <template is=\"dom-bind\">\r\n            <datetime-picker\r\n              datetime=\"{{datetime}}\"\r\n              date=\"{{date}}\"\r\n              default=\"2021-08-12\"\r\n            ></datetime-picker>\r\n          </template>\r\n        </dom-bind></br></br>\r\n\r\n</br><choose-date> </choose-date/> <choose-person/></choose-person><choose-vehicle></choose-vehicle>\r\n<choose-officer></choose-officer/> <choose-location></choose-location/>\r\n<p>was clothing removed <m-select id=\"q1\" choices='Yes|No'>Yes/No</m-select>\r\n<p><show-if  triggervalue='Yes' triggeron='q1'>What items were removed? <free-text style='width:100px'>type here</free-text></show-if></p>\r\n<p>Type Yes here to trigger a new field ->   <free-text id='q2'>Test</free-text>\r\n<p><show-if  triggervalue='Yes' triggeron='q2'>Type more data here <free-text style='width:100px' placeholder='type something here placeholder'></free-text></show-if></p>\r\n             </div>\r\n`;*/\r\n\r\nvar templateHTMLData = \"\";\r\ntemplateHTMLData += \"<div class='ce-example-border'>\";\r\ntemplateHTMLData +=\r\n  \"<free-text id='text-free'>this is a large block of editable text</free-text></br></br>\";\r\ntemplateHTMLData +=\r\n  \"<m-select id='person' choices='Usman|Ian|Mark' multiple >multiple choice field </m-select>\";\r\ntemplateHTMLData +=\r\n  \"<m-select id='bbb' onclick='msel_clicked(this)' choices='aaa|bbb|ccc'>choice field </m-select>\";\r\ntemplateHTMLData +=\r\n  \"<m-select id='ccc' onclick='msel_clicked(this)' choices='aaa|bbb|ccc'>choice field</m-select>\";\r\ntemplateHTMLData +=\r\n  \"<m-number class='textbox' id='number' type='number' min='2' max='5'></m-number></br></br>\";\r\ntemplateHTMLData +=\r\n  \"<p><deletable-span id=d1>this is a deletable paragraph with some editable text and some fixed text and a deletable word inside the deletable paragraph\";\r\ntemplateHTMLData +=\r\n  \"<free-text  placeholder='type something here placeholder'></free-text> more   deleteable fixed text\";\r\n//templateHTMLData += \"<deletable-span id=d2>A deleteable word</deletable-span>some extra words here</deletable-span></p>\";\r\ntemplateHTMLData +=\r\n  \"</deletable-span><deletable-span id=d2>A deleteable word</deletable-span></p>\";\r\ntemplateHTMLData +=\r\n  \"<m-datenow id='m_datenow_field'>Date field</m-datenow></br></br>\";\r\ntemplateHTMLData += \"<m-date id='m_date_field'>Date field</m-date>\";\r\ntemplateHTMLData += \"<m-time id='time'>\";\r\ntemplateHTMLData += \"<input type='text' id='timepicker' value='' />\";\r\ntemplateHTMLData += \"</m-time>\";\r\n\r\ntemplateHTMLData += \"<dom-bind>\";\r\ntemplateHTMLData += \"<template is='dom-bind'>\";\r\n//templateHTMLData += \"<datetime-picker id='datetime_field' datetime='{{datetime}}' date='{{date}}' default='2021-08-12'></datetime-picker>\";\r\ntemplateHTMLData += \"</template>\";\r\ntemplateHTMLData += \"</dom-bind>\";\r\ntemplateHTMLData += \"<choose-date> </choose-date/>\";\r\ntemplateHTMLData += \"</br></br>\";\r\ntemplateHTMLData +=\r\n  \"<choose-person onclick='choose_person(this)' id='choose_person'/></choose-person>\";\r\ntemplateHTMLData +=\r\n  \"<choose-vehicle onclick='choose_vehicle(this)' id='choose_vehicle'></choose-vehicle>\";\r\ntemplateHTMLData +=\r\n  \"<choose-officer onclick='choose_officer(this)' id='choose_officer'></choose-officer/>\";\r\ntemplateHTMLData +=\r\n  \"<choose-location onclick='choose_location(this)' id='choose_location'></choose-location/>\";\r\ntemplateHTMLData +=\r\n  \"<p>Was clothing removed <m-select id='q1' choices='Yes|No'>Yes/No</m-select></p>\";\r\ntemplateHTMLData +=\r\n  \"<p class='showif_parent_p triggeron_q1'><show-if triggervalue='Yes' id='q2' triggeron='q1'>What items were removed? <free-text style='width:100px'>type here</free-text></show-if></p>\";\r\ntemplateHTMLData +=\r\n  \"<p>Type Yes here to trigger a new field ->   <free-text id='q3'>Test</free-text>\";\r\ntemplateHTMLData +=\r\n  \"<p class='showif_parent_p triggeron_q3'><show-if  triggervalue='Yes' triggeron='q3' id='q4'>Type more data here <free-text style='width:100px' placeholder='type something here placeholder'></free-text></show-if></p>\";\r\n\r\ntemplateHTMLData += \"</div>\";\r\n\r\ntemplatedata.text = templateHTMLData;\r\n\r\nblockButton.addEventListener(\"click\", function () {\r\n  //window.alert( editor.blocks, data);\r\n  var index = editor.blocks.getBlocksCount();\r\n\r\n  editor.blocks.insert(\"templatedparagraph\", templatedata, null, index, true);\r\n  // attach time picker loading\r\n  tp.attach({\r\n    target: \"timepicker\",\r\n  });\r\n});\r\nparaButton.addEventListener(\"click\", function () {\r\n  //window.alert( editor.blocks, data);\r\n  var index = editor.blocks.getBlocksCount();\r\n\r\n  var text = { text: \"new paragraph\" };\r\n  editor.blocks.insert(\"paragraph\", text, null, index, true);\r\n});\r\n\r\nimageButton.addEventListener(\"click\", function () {\r\n  //window.alert( editor.blocks, data);\r\n  // Native(\"addAttachment\");\r\n  var index = editor.blocks.getBlocksCount();\r\n  var text = {\r\n    caption: \"caption\",\r\n    url: \"http://ianb.ca/Photos/P1000615.JPG\",\r\n  };\r\n  console.log(\"Imgtext\", text);\r\n  editor.blocks.insert(\"image\", text, null, index, true);\r\n});\r\n\r\nfileButton.addEventListener(\"click\", function () {\r\n  //window.alert( editor.blocks, data);\r\n  // Native(\"addAttachment\");\r\n  console.log(\"clicked\");\r\n  const fileupload = document.getElementById(\"FileUpload1\");\r\n  const filePath = document.getElementById(\"spnFilePath\");\r\n  fileupload.onchange = function () {\r\n    var fileName =\r\n      fileupload.value.split(\"\\\\\")[fileupload.value.split(\"\\\\\").length - 1];\r\n    filePath.innerHTML = \"<b>Selected File: </b>\" + fileName;\r\n  };\r\n});\r\n\r\nfunction addBlock(type, data) {\r\n  var index = editor.blocks.getBlocksCount();\r\n  // console(\"index\",editor.blocks.getBlocksCount())\r\n  editor.blocks.insert(type, data, null, index, true);\r\n}\r\n/**\r\n * Toggle read-only example\r\n */\r\ntoggleReadOnlyButton.addEventListener(\"click\", async () => {\r\n  const readOnlyState = await editor.readOnly.toggle();\r\n\r\n  readOnlyIndicator.textContent = readOnlyState ? \"On\" : \"Off\";\r\n});\r\n\r\nfunction hasClass(ele, cls) {\r\n  return ele.className.match(new RegExp(\"(\\\\s|^)\" + cls + \"(\\\\s|$)\"));\r\n}\r\n"]}